1. Создать объект Point, содержащий два свойства: "x" и "y" — координаты точки, и метод GetQuadrant, вычисляющий, 
в каком квадранте в декартовой системе координат находится данная точка. Протестируйте данный объект, изменяя значения его координат, 
и повторно вызавая метод GetQuadrant.

var point = {
    x: 4,
    y: 6,
    GetQuadrant: function (){
        if (point.x > 0 && point.y > 0){
            console.log("1 Квадрант!");
        } else if (point.x < 0 && point.y > 0){
            console.log('2 Квадрант!');
        } else if (point.x < 0 && point.y < 0){
            console.log("3 Квадрант!");
        } else {
            console.log("4 Квадрант!");
        }
    }
}

point.GetQuadrant();


------------------------------------------------------------------------------------------------------------------------------
2. Создать объект Calculator, который должен содержать методы для расчета суммы, разности, произведения и частного двух чисел.
Протестировать данный объект, принимая от пользователя значения двух операндов и знак операции.
В зависимости от принятого знака операции, вызвать соответствующий метод.

var firstNum = +prompt('Введите первое число: ');
var secondNum =  +prompt('Введите второе число: ');
var sign = prompt('Введите знак операции: ');


var Calculator = {
    getSum: function (a, b) {
        var resSum = a + b;
        console.log(resSum);
    },

    getMinus: function(a, b){
        var resMinus = a - b;
        console.log(resMinus);
    }, 

    getMulti: function(a, b) {
        var resMulti = a * b;
        console.log(resMulti);
    },

    getDivision: function(a, b){
        var resDev = a / b;
        console.log(resDev);
    },
}

switch(sign){
    case '+': 
        console.log(Calculator.getSum(firstNum, secondNum));
        break;
    case '-': 
        console.log(Calculator.getMinus(firstNum, secondNum));
        break;
    case '*':
        console.log(Calculator.getMulti(firstNum, secondNum));
        break;
    case '/':
        console.log(Calculator.getDivision(firstNum, secondNum));
        break;
    default:
        alert('Вы ввели неправильный знак!');
}


---------------------------------------------------------------------------------------------------------------------
3. Создать два произвольных массива: 
один массив - любимая спортивная команда / модели автомобилей / города, 
во втором - количество игроков в команде / объем двигателя / количество жителей в городе.
Из двух массивов сделайте ассоциативный массив (объект).
Массив, который будет выступать в качестве ключа - должен содержать уникальные значения
		
		Например:
		let keys = ["id", "name"];
		let values = [1, "Vlad"];
		
		В результате должно получится следующее:
		{
			"id": 1,
			"name": "Vlad"
		}
*/

var keys = ['London', 'Kiev', 'New-York', 'Berlin'];
var values = ['500.000', '200.000', '900.000', '300.000'];

var arrObj = new Object();

arrObj[keys[0]] = values[0];
arrObj[keys[1]] = values[1];
arrObj[keys[2]] = values[2];
arrObj[keys[3]] = values[3];

console.log(arrObj);



/* Варіант 2 (Чи буде це вважатися також правильним рішення?)
var obj = new Map([
    ['London', '500.000'],
    ['Kiev', '200.000'],
    ['New-York', '900.000'],
    ['Berlin', '300.000']
]);

console.log(obj);

-----------------------------------------------------------------------------------------------------------------------------

4. Создать массив, который будет хранить в себе информацию о сотрудниках предприятия. Каждый элемент масива — объект,
содержащий свойства: name, sName, age, occupation, и метод show, который выводит всю информацию о пользователе.
Реализовать заполнение массива пользователем. По окончанию заполнения — вывести информацию о сотрудниках.

var info = [
    p1 = {
        name: prompt('Введите свое имя: '),
        sName: prompt('Введите свою фамилию: '),
        age: +prompt('Введите свой возрост: '),
        occupation: prompt('Введите свою должность: '),
        showInfo: function(){
            console.log('Ваше имя - ' + this.name + ', ваша фамилия - ' + this.sName + ', ваш возрост - ' + this.age + ', ваша должность - ' + this.occupation);
        }
    },
    p2 = {
        name: prompt('Введите свое имя: '),
        sName: prompt('Введите свою фамилию: '),
        age: +prompt('Введите свой возрост: '),
        occupation: prompt('Введите свою должность: '),
        showInfo: function(){
            console.log('Ваше имя - ' + this.name + ', ваша фамилия - ' + this.sName + ', ваш возрост - ' + this.age + ', ваша должность - ' + this.occupation);
        }
    },
    p3 = {
        name: prompt('Введите свое имя: '),
        sName: prompt('Введите свою фамилию: '),
        age: +prompt('Введите свой возрост: '),
        occupation: prompt('Введите свою должность: '),
        showInfo: function(){
            console.log('Ваше имя - ' + this.name + ', ваша фамилия - ' + this.sName + ', ваш возрост - ' + this.age + ', ваша должность - ' + this.occupation);
        }
    }

]

for (var i = 0; i < info.length; i++){
    info[i].showInfo();
}

----------------------------------------------------------------------------------------------------------------

5. Для предыдущего задания создайте функцию, которая будет принимать в себя массив объектов-сотрудников, и каждому из объектов
       будет добавлять новое свойство "salary", хранящее зарплату сотрудника. 
       Зарплата расчитывается, исходя из значения свойства "occupation" следующим образом:
           • "director" — 3000;
           • "manager" — 1500;
           • "programmer" — 2000;
           • для остальных значений — 1000.
       После выполнения функции — вывести информацию о сотрудниках.
           
       // sort(function(a, b) { return a > b });
       // 1, 2, 3, 5, 10, 14
       // 1, 10, 14, 2, 3,
       
var info = [
    p1 = {
        name: prompt('Введите свое имя: '),
        sName: prompt('Введите свою фамилию: '),
        age: +prompt('Введите свой возрост: '),
        occupation: prompt('Введите свою должность: '),
    },
    
    p2 = {
        name: prompt('Введите свое имя: '),
        sName: prompt('Введите свою фамилию: '),
        age: +prompt('Введите свой возрост: '),
        occupation: prompt('Введите свою должность: '),
    },
    
    p3 = {
        name: prompt('Введите свое имя: '),
        sName: prompt('Введите свою фамилию: '),
        age: +prompt('Введите свой возрост: '),
        occupation: prompt('Введите свою должность: '),
    }

]


function CheckInfo(information){

    for (var i = 0; i < information.length; i++){
        switch(information[i].occupation){
            case 'Director':
                information[i].salary = 3000;
                break;
            case 'Manager':
                information[i].salary = 1500;
                break;
            case 'Programmer':
                information[i].salary = 2000;
                break;
            default: 
                information[i].salary = 1000;
        }
    }
}

CheckInfo(info);

for (var j = 0; j < info.length; j++){
    console.log('Ваше имя - ' + info[j].name);
    console.log('Ваша фамилия  - ' + info[j].sName);
    console.log('Ваш возрост - ' + info[j].age);
    console.log('Ваша должность - ' + info[j].occupation);
    console.log('Ваша зарплата - ' + info[j].salary);
}


----------------------------------------------------------------------------------------------------------------------

6. (*) Для задания 3 создать метод, позволяющий отсортировать массив сотрудников по одному из свойств: name, sName, age, occupation, salary.
       Параметр для сортировки принимается от пользователя.
       После выполнения функции — вывести информацию о сотрудниках.

var info = [
    p1 = {
        name: prompt('Введите свое имя: '),
        sName: prompt('Введите свою фамилию: '),
        age: +prompt('Введите свой возрост: '),
        occupation: prompt('Введите свою должность: '),
    },
    
    p2 = {
        name: prompt('Введите свое имя: '),
        sName: prompt('Введите свою фамилию: '),
        age: +prompt('Введите свой возрост: '),
        occupation: prompt('Введите свою должность: '),
    },
    
    p3 = {
        name: prompt('Введите свое имя: '),
        sName: prompt('Введите свою фамилию: '),
        age: +prompt('Введите свой возрост: '),
        occupation: prompt('Введите свою должность: '),
    }

]


function CheckInfo(information){

    for (var i = 0; i < information.length; i++){
        switch(information[i].occupation){
            case 'Director':
                information[i].salary = 3000;
                break;
            case 'Manager':
                information[i].salary = 1500;
                break;
            case 'Programmer':
                information[i].salary = 2000;
                break;
            default: 
                information[i].salary = 1000;
        }
    }
}

CheckInfo(info);

for (var j = 0; j < info.length; j++){
    console.log('Ваше имя - ' + info[j].name);
    console.log('Ваша фамилия  - ' + info[j].sName);
    console.log('Ваш возрост - ' + info[j].age);
    console.log('Ваша должность - ' + info[j].occupation);
    console.log('Ваша зарплата - ' + info[j].salary);
}


var crit = prompt("Enter criteria (name, sName, age, salary): ");
    info.sort(function(a, b) {
        switch (crit) {
            case "name":
                if (a["name"] > b["name"]) {
                    return 1;
                }
                else if (a["name"] < b["name"]) {
                    return -1;
                } else {return 0;}
                break;
            case "sName":
                if (a["sName"] > b["sName"]) {
                    return 1;
                }
                else if (a["sName"] < b["sName"]) {
                    return -1;
                } else {return 0;}
                break;
            case "age":
                return a["age"] - b["age"];
                break;
            case "salary":
                return a["salary"] - b["salary"];
                break;
            default:
                alert("None");
        }
    })




 
